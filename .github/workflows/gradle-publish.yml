# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        include:
          - os: windows-latest
            gradlew: 'gradlew.bat'
            shell: 'pwsh'
          - os: ubuntu-latest
            gradlew: './gradlew'
            shell: 'bash'
          - os: macos-latest
            gradlew: './gradlew'
            shell: 'bash'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Gradle Cache
        uses: burrunan/gradle-cache-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Binary
        id: buildBinary
        shell: ${{ matrix.include.shell }}
        run: |
          OUTPUTPATH=$(${{ matrix.include.gradlew }} packageDistributionForCurrentOS --console=plain --quiet)
          echo "path=$OUTPUTPATH" >> $GITHUBENV
          echo "::set-output name=path::$OUTPUTPATH"

      - name: Upload
        uses: djn24/add-asset-to-release@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          path: ${{steps.buildBinary.outputs.path}}
